(function(d,p){typeof exports=="object"&&typeof module<"u"?p(exports):typeof define=="function"&&define.amd?define(["exports"],p):(d=typeof globalThis<"u"?globalThis:d||self,p(d["cat-printer"]={}))})(this,function(d){"use strict";var V=Object.defineProperty;var H=(d,p,A)=>p in d?V(d,p,{enumerable:!0,configurable:!0,writable:!0,value:A}):d[p]=A;var S=(d,p,A)=>H(d,typeof p!="symbol"?p+"":p,A);var _=(a=>(a[a.ApplyEnergy=190]="ApplyEnergy",a[a.GetDeviceState=163]="GetDeviceState",a[a.GetDeviceInfo=168]="GetDeviceInfo",a[a.UpdateDevice=169]="UpdateDevice",a[a.SetDpi=164]="SetDpi",a[a.Lattice=166]="Lattice",a[a.Retract=160]="Retract",a[a.Feed=161]="Feed",a[a.Speed=189]="Speed",a[a.Energy=175]="Energy",a[a.Bitmap=162]="Bitmap",a))(_||{}),T=(a=>(a[a.Transfer=0]="Transfer",a[a.Response=1]="Response",a))(T||{});function R(a){let e=0;for(const t of a){e^=t;for(let i=0;i<8;i++)e&128?e=e<<1^7:e<<=1;e&=255}return e}function D(a,e=128){const t=new Uint8Array(Math.ceil(a.length/8));for(let i=0;i<a.length;i++){const r=Math.floor(i/8),c=i%8,n=a[i],s=n&255,h=n>>8&255,o=n>>16&255;(s+h+o)/3<e&&(t[r]|=1<<c)}return t}class C{dither(e,t){const i=e.data,r=t.brightness!==void 0?t.brightness:128;for(let c=0;c<i.length;c+=4){const s=(i[c]+i[c+1]+i[c+2])/3<r?0:255;i[c]=i[c+1]=i[c+2]=s}return e}}class I{constructor(){S(this,"thresholdMap",[[0,2],[3,1]])}dither(e,t){const i=e.data,r=e.width,c=e.height;for(let n=0;n<c;n++)for(let s=0;s<r;s++){const h=(n*r+s)*4,o=i[h],w=i[h+1],m=i[h+2],y=(o+w+m)/3,E=(this.thresholdMap[n%2][s%2]+1)*(255/5),f=y<E?0:255;i[h]=i[h+1]=i[h+2]=f}return e}}class P{dither(e,t){const i=e.data,r=e.width,c=e.height;for(let n=0;n<c;n++)for(let s=0;s<r;s++){const h=(n*r+s)*4,o=i[h],w=i[h+1],m=i[h+2],E=(o+w+m)/3<128?0:255,f=E,g=E,b=E;i[h]=f,i[h+1]=g,i[h+2]=b;const v=o-f,l=w-g,u=m-b;this.distributeError(i,r,s+1,n,v*7/16,l*7/16,u*7/16),this.distributeError(i,r,s-1,n+1,v*3/16,l*3/16,u*3/16),this.distributeError(i,r,s,n+1,v*5/16,l*5/16,u*5/16),this.distributeError(i,r,s+1,n+1,v*1/16,l*1/16,u*1/16)}return e}distributeError(e,t,i,r,c,n,s){if(i>=0&&i<t&&r>=0&&r<e.length/(t*4)){const h=(r*t+i)*4;e[h]=Math.max(0,Math.min(255,e[h]+c)),e[h+1]=Math.max(0,Math.min(255,e[h+1]+n)),e[h+2]=Math.max(0,Math.min(255,e[h+2]+s))}}}class F{dither(e,t){const i=e.data;for(let r=0;r<i.length;r+=4){const c=(i[r]+i[r+1]+i[r+2])/3,n=Math.random()*255,s=c<n?0:255;i[r]=i[r+1]=i[r+2]=s}return e}}const N=Object.freeze(Object.defineProperty({__proto__:null,BayerDithering:I,FloydSteinbergDithering:P,RandomDithering:F,ThresholdDithering:C},Symbol.toStringTag,{value:"Module"}));class x{constructor(e={}){S(this,"device",null);S(this,"server",null);S(this,"txCharacteristic",null);S(this,"rxCharacteristic",null);S(this,"printerState",{outOfPaper:!1,coverOpen:!1,overheat:!1,lowPower:!1,paused:!1,busy:!1});S(this,"options");S(this,"modelName","");this.options={debug:!1,speed:32,energy:24e3,finishFeed:100,...e}}async connect(){if(!navigator.bluetooth)throw new Error("Bluetooth API is not available in this browser");try{if(this.device=await navigator.bluetooth.requestDevice({filters:[{services:[44848]}],optionalServices:[44592]}),this.modelName=this.device.name||"",this.log(`Connected to printer model: ${this.modelName}`),!this.device.gatt)throw new Error("Bluetooth GATT not available");this.server=await this.device.gatt.connect();const e=await this.server.getPrimaryService(44592);return this.txCharacteristic=await e.getCharacteristic(44545),this.rxCharacteristic=await e.getCharacteristic(44546),await this.rxCharacteristic.startNotifications(),this.rxCharacteristic.addEventListener("characteristicvaluechanged",this.handleNotification.bind(this)),await this.getDeviceState(),await this.prepare(this.options.speed,this.options.energy),this.printerState}catch(e){throw console.error("Connection error:",e),e}}async disconnect(){if(this.rxCharacteristic)try{await this.rxCharacteristic.stopNotifications()}catch(e){this.log("Error stopping notifications:",e)}this.server&&this.server.connected&&this.server.disconnect(),this.device=null,this.server=null,this.txCharacteristic=null,this.rxCharacteristic=null,this.log("Disconnected from printer")}getState(){return{...this.printerState}}isConnected(){var e;return((e=this.server)==null?void 0:e.connected)===!0&&this.txCharacteristic!==null}async printText(e,t={}){if(!this.isConnected())throw new Error("Printer not connected");const r={...{fontFamily:"sans-serif",fontSize:16,align:"start",lineSpacing:8,rotate:0,flipH:!1,flipV:!1,brightness:128,offset:0},...t},c=await this.textToBitmap(e,r);r.offset&&r.offset!==0&&(await this.setSpeed(8),r.offset>0?await this.feed(r.offset):await this.retract(-r.offset),await this.setSpeed(this.options.speed)),await this.printBitmap(c)}async printImage(e,t={}){if(!this.isConnected())throw new Error("Printer not connected");const r={...{dither:"bayer",rotate:0,flipH:!1,flipV:!1,brightness:128,offset:0},...t},c=await this.imageToBitmap(e,r);r.offset&&r.offset!==0&&(await this.setSpeed(8),r.offset>0?await this.feed(r.offset):await this.retract(-r.offset),await this.setSpeed(this.options.speed)),await this.printBitmap(c)}async printMultiple(e){if(!this.isConnected())throw new Error("Printer not connected");await this.prepare(this.options.speed,this.options.energy);for(const t of e)t.type==="text"?await this.printText(t.content,t.options):t.type==="image"&&await this.printImage(t.content,t.options);await this.finish(this.options.finishFeed)}async feed(e){if(e<=0)return;const t=this.makeCommand(_.Feed,new Uint8Array([e&255,e>>8&255]));await this.write(t)}async retract(e){if(e<=0)return;const t=this.makeCommand(_.Retract,new Uint8Array([e&255,e>>8&255]));await this.write(t)}async setSpeed(e){const t=this.makeCommand(_.Speed,new Uint8Array([e]));await this.write(t)}async setEnergy(e){const t=new Uint8Array([e&255,e>>8&255,e>>16&255,e>>24&255]),i=this.makeCommand(_.Energy,t);await this.write(i)}async applyEnergy(){const e=this.makeCommand(_.ApplyEnergy,new Uint8Array([1]));await this.write(e)}async getDeviceState(){const e=this.makeCommand(_.GetDeviceState,new Uint8Array([1]));return await this.write(e),this.printerState}async prepare(e,t){await this.setSpeed(e),await this.setEnergy(t),await this.applyEnergy()}async finish(e=0){e>0&&(await this.setSpeed(8),await this.feed(e))}async draw(e){if(!this.isConnected())throw new Error("Printer not connected");const t=this.makeCommand(_.Bitmap,e);await this.write(t)}async printBitmap(e){const{width:t,height:i,data:r}=e,c=Math.ceil(t/8);for(let n=0;n<i;n++){const s=n*c,h=s+c,o=r.slice(s,h);o.every(w=>w===0)||await this.draw(o)}}makeCommand(e,t,i=T.Transfer){return new Uint8Array([81,120,e,i,t.length&255,t.length>>8,...t,R(t),255])}async write(e){if(!this.txCharacteristic)throw new Error("Printer not properly connected");this.log("Sending data:",Array.from(e).map(t=>t.toString(16).padStart(2,"0")).join(" "));try{await this.txCharacteristic.writeValueWithoutResponse(e)}catch(t){throw this.log("Error writing to printer:",t),t}}handleNotification(e){const t=e.target;if(!t.value)return;const i=new Uint8Array(t.value.buffer);if(this.log("Received notification:",Array.from(i).map(r=>r.toString(16).padStart(2,"0")).join(" ")),i.length>=7&&i[2]===_.GetDeviceState){const r=i[6];this.printerState={outOfPaper:!!(r&1),coverOpen:!!(r&2),overheat:!!(r&4),lowPower:!!(r&8),paused:!!(r&16),busy:!!(r&128)},this.log("Printer state updated:",this.printerState)}}async textToBitmap(e,t){const i=document.createElement("canvas"),r=i.getContext("2d");i.width=384,i.height=500,r.fillStyle="white",r.fillRect(0,0,i.width,i.height),r.fillStyle="black";const c=t.fontWeight?`${t.fontWeight} `:"";r.font=`${c}${t.fontSize}px ${t.fontFamily}`,r.textAlign=t.align==="start"?"left":t.align==="end"?"right":t.align;const n=e.split(`
`),s=t.fontSize+(t.lineSpacing||8);let h=t.fontSize;for(const f of n){const g=t.align==="start"?0:t.align==="end"?i.width:i.width/2;r.fillText(f,g,h),h+=s}const o=document.createElement("canvas");o.width=i.width,o.height=h;const w=o.getContext("2d");if(w.drawImage(i,0,0),t.rotate!==0||t.flipH||t.flipV){const f=document.createElement("canvas");f.width=o.width,f.height=o.height;const g=f.getContext("2d");g.save(),g.translate(f.width/2,f.height/2),t.rotate&&t.rotate!==0&&g.rotate(t.rotate*Math.PI/180),t.flipH&&g.scale(-1,1),t.flipV&&g.scale(1,-1),g.drawImage(o,-o.width/2,-o.height/2),g.restore(),o.width=f.width,o.height=f.height,w.drawImage(f,0,0)}const m=w.getImageData(0,0,o.width,o.height),y=new Uint32Array(m.data.buffer),E=D(y);return{width:o.width,height:o.height,data:E}}async imageToBitmap(e,t){const i=new Image;i.crossOrigin="anonymous";const c=await new Promise((l,u)=>{i.onload=()=>l(i),i.onerror=()=>u(new Error(`Failed to load image: ${e}`)),i.src=e}),n=document.createElement("canvas"),s=n.getContext("2d"),h=384,o=c.width/c.height,w=Math.floor(h/o);if(n.width=h,n.height=w,s.fillStyle="white",s.fillRect(0,0,n.width,n.height),s.drawImage(c,0,0,h,w),t.rotate!==0||t.flipH||t.flipV){const l=document.createElement("canvas");l.width=n.width,l.height=n.height;const u=l.getContext("2d");u.save(),u.translate(l.width/2,l.height/2),t.rotate&&t.rotate!==0&&u.rotate(t.rotate*Math.PI/180),t.flipH&&u.scale(-1,1),t.flipV&&u.scale(1,-1),u.drawImage(n,-n.width/2,-n.height/2),u.restore(),n.width=l.width,n.height=l.height,s.drawImage(l,0,0)}const m=s.getImageData(0,0,n.width,n.height);let y=m;t.dither&&t.dither!=="none"&&(t.dither==="threshold"?y=new C().dither(m,t):t.dither==="bayer"?y=new I().dither(m,t):t.dither==="floyd-steinberg"?y=new P().dither(m,t):t.dither==="random"&&(y=new F().dither(m,t)),s.putImageData(y,0,0));const E=s.getImageData(0,0,n.width,n.height),f=new Uint32Array(E.data.buffer);let g=128;(t.dither==="threshold"||t.dither==="none")&&(g=t.brightness!==void 0?t.brightness:128);const b=D(f,g),v=n.toDataURL("image/png");return{width:n.width,height:n.height,data:b,dataurl:v}}log(...e){this.options.debug&&console.log("[CatPrinter]",...e)}}d.CAT_ADV_SRV=44848,d.CAT_PRINT_RX_CHAR=44546,d.CAT_PRINT_SRV=44592,d.CAT_PRINT_TX_CHAR=44545,d.CatPrinter=x,d.Command=_,d.CommandType=T,d.DEF_CANVAS_WIDTH=384,d.DEF_ENERGY=24e3,d.DEF_FINISH_FEED=100,d.DEF_SPEED=32,d.Dithering=N,d.crc8=R,d.rgbaToBits=D,Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});
